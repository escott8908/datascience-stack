version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mlflow
    volumes:
      - /home/escott/data_analysis/pgdata:/var/lib/postgresql/data
    networks: [localnet]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d mlflow || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow   # (your image with psycopg2-binary)
    image: mlflow-with-drivers:latest
    container_name: mlflow
    restart: always
    ports: ["5000:5000"]
    environment:
      # Defaults ensure we never pass empty args
      MLFLOW_BACKEND_STORE_URI: ${MLFLOW_BACKEND_STORE_URI:-postgresql+psycopg2://admin:admin@postgres:5432/mlflow}
      MLFLOW_ARTIFACTS_DESTINATION: ${MLFLOW_ARTIFACTS_DESTINATION:-file:/mlartifacts}
    volumes:
      - /home/escott/data_analysis/mlflow:/mlflow
      - /home/escott/data_analysis/mlartifacts:/mlartifacts
    depends_on:
      postgres:
        condition: service_healthy
    # Use array form so the exact command runs
    entrypoint: ["mlflow"]
    command:
      - server
      - --host
      - 0.0.0.0
      - --port
      - "5000"
      - --backend-store-uri
      - ${MLFLOW_BACKEND_STORE_URI}
      - --artifacts-destination
      - ${MLFLOW_ARTIFACTS_DESTINATION}
      - --serve-artifacts
    networks: [localnet]

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: edgar.scott8908@gmail.com
      PGADMIN_DEFAULT_PASSWORD: escott
    ports:
      - "8080:80"
    networks:
      - localnet

  jupyterlab:
    build:
      context: .
      dockerfile: Dockerfile.jupyterlab
    image: custom-jupyterlab:latest
    container_name: jupyterlab
    restart: always
    ports:
      - "8888:8888"
    volumes:
      - /home/escott/data_analysis:/home/jovyan
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    command: start-notebook.sh --NotebookApp.token=''      
    networks:
      - localnet

  vscode:
    build:
      context: .
      dockerfile: Dockerfile.vscode
    image: vscode-server:latest
    container_name: vscode
    restart: unless-stopped
    ports:
      - "8443:8443"
    environment:
      PASSWORD: ${CODE_SERVER_PASSWORD}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      TZ: America/Chicago
    volumes:
      - /home/escott/data_analysis/vscode/projects:/home/coder/projects
      - /home/escott/data_analysis/vscode/vscode-data:/home/coder/.local/share/code-server
    working_dir: /home/coder/project
    command: ["code-server","--bind-addr","0.0.0.0:8443","/home/coder/project"]
    networks: [localnet]
    user: "${LOCAL_UID:-1000}:${LOCAL_GID:-1000}"

networks:
  localnet:
    
